name: .NET Core

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: windows-latest # For a list of available runner types, refer to
                            # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    # Install the .NET Core workload
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.5.0
      with:
        dotnet-version: 3.1.405
        # Authenticates packages to push to GPR
        source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      env:
        NUGET_AUTH_TOKEN: '%NUGET_AUTH_TOKEN%'
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
    
    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.1
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
    
    - name: Install dependencies
      run: msbuild /t:Restore
      env:
        NUGET_AUTH_TOKEN: ${{ github.token }}
    
    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test

    - name: Build
      run: |
        dotnet restore DotNet.Core.Console.Exemple/DotNet.Core.Console.Exemple.csproj
        msbuild /t:Pack /p:Configuration=Debug DotNet.Core.Console.Exemple/DotNet.Core.Console.Exemple.csproj
    
    - name: Copy
      run: copy DotNet.Core.Console.Exemple/bin/Debug/*.nupkg .
    
    # - name: PushNuget
    #   run: dotnet nuget push *.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.PUBLISH_TO_NUGET_ORG }} --skip-duplicate

    # - name: PushGithub
    #   run: dotnet nuget push *.nupkg --no-symbols --skip-duplicate
    #   env:
    #     NUGET_AUTH_TOKEN: ${{ github.token }}
    
